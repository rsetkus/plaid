/*
 *   Copyright 2018 Google LLC
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        buildConfigField 'String', 'DESIGNER_NEWS_CLIENT_ID', "\"${designer_news_client_id}\""
        buildConfigField 'String',
                'DESIGNER_NEWS_CLIENT_SECRET', "\"${designer_news_client_secret}\""

        buildConfigField 'String',
                'PRODUCT_HUNT_DEVELOPER_TOKEN', "\"${product_hunt_developer_token}\""

    }

    dataBinding {
        enabled true
    }

    buildTypes {
        release {
            consumerProguardFiles 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/core_debug.kotlin_module'
    }

}

repositories {
    google()
    jcenter()
    maven { url 'http://dl.bintray.com/kotlin/kotlin-eap' }
}

dependencies {
    api project(':bypass')

    api "androidx.room:room-runtime:${versions.room}"
    api "androidx.core:core-ktx:${versions.coreKtx}"
    api "androidx.constraintlayout:constraintlayout:${versions.constraintLayout}"
    api "androidx.browser:browser:${versions.androidx}"
    api "androidx.palette:palette:${versions.androidx}"
    api "androidx.recyclerview:recyclerview:${versions.androidx}"
    api "androidx.dynamicanimation:dynamicanimation:${versions.androidx}"
    api "com.github.bumptech.glide:glide:${versions.glide}"
    api "com.github.bumptech.glide:okhttp3-integration:${versions.glide}"
    api "com.github.bumptech.glide:recyclerview-integration:${versions.glide}"
    api "com.google.android.material:material:${versions.material}"
    api "com.google.code.gson:gson:${versions.gson}"
    api "com.google.dagger:dagger:${versions.dagger}"
    api "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    api "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    api "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    api "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"
    api "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:${versions.retrofitCoroutines}"
    api "org.jsoup:jsoup:${versions.jsoup}"
    api "androidx.lifecycle:lifecycle-viewmodel:${versions.lifecycle}"
    api "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}"
    kapt "androidx.room:room-compiler:${versions.room}"
    kapt "com.github.bumptech.glide:compiler:${versions.glide}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"

    testImplementation project(':test_shared')
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${versions.mockito_kotlin}"
    testImplementation "com.squareup.retrofit2:retrofit-mock:${versions.retrofit}"
    testImplementation "junit:junit:${versions.junit}"
    testImplementation "org.mockito:mockito-core:${versions.mockito}"

    androidTestImplementation project(':test_shared')
    androidTestImplementation "androidx.test:runner:${versions.test_runner}"
    androidTestImplementation "androidx.test:rules:${versions.test_rules}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${versions.espresso}"
    androidTestImplementation "org.mockito:mockito-core:${versions.mockito}"
    androidTestImplementation "org.mockito:mockito-android:${versions.mockito}"
    androidTestImplementation "com.squareup.retrofit2:retrofit-mock:${versions.retrofit}"

    // Work around issue with runtime classpath version conflict
    androidTestImplementation "androidx.arch.core:core-testing:${versions.lifecycle}"
    androidTestImplementation "androidx.legacy:legacy-support-core-utils:${versions.legacyCoreUtils}"
    androidTestImplementation "androidx.lifecycle:lifecycle-runtime:${versions.lifecycle}"
}

androidExtensions {
    experimental = true
}
